pipeline {
  agent { label 'master' }

  options {
    disableConcurrentBuilds()
    buildDiscarder(logRotator(
      numToKeepStr: '10',
      daysToKeepStr: '14',
      artifactNumToKeepStr: '10',
    ))
  }
  
  stages {
    stage('Tag') {
      steps { script {
        cmn = load('ci/common.groovy')
        /* to avoid missing build tag parallel builds */
        print "Build Number: ${cmn.tagBuild(true)}"
      } }
    }
    stage('Build') {
      parallel {
        stage('MacOS') { steps { script {
          osx = cmn.buildBranch('status-react/combined/desktop-macos', )
        } } }
        stage('Linux') { steps { script {
          nix = cmn.buildBranch('status-react/combined/desktop-linux')
        } } }
        stage('iOS') { steps { script {
          ios = cmn.buildBranch('status-react/combined/mobile-ios')
        } } }
        stage('Android') { steps { script {
          dro = cmn.buildBranch('status-react/combined/mobile-android')
        } } }
        stage('Android e2e') { steps { script {
          e2e = cmn.buildBranch('status-react/combined/mobile-android', 'e2e')
        } } }
      }
    }
    stage('Archive') {
      steps { script {
        sh('rm -f pkg/*')
        cmn.copyArts('status-react/combined/desktop-macos', osx.number)
        cmn.copyArts('status-react/combined/desktop-linux', nix.number)
        cmn.copyArts('status-react/combined/mobile-android', dro.number)
        cmn.copyArts('status-react/combined/mobile-android', e2e.number)
        archiveArtifacts('pkg/*')
      } }
    }
    stage('Notify') {
      steps { script {
        /* special case for iOS Diawi links */
        ipaUrl = ios.getBuildVariables().get('DIAWI_URL')
        apkUrl = dro.getBuildVariables().get('DIAWI_URL')
        slackSend(
          message: (
            (env.CHANGE_ID != null ?
              "Build PR #${BRANCH_NAME}(${CHANGE_BRANCH}) success! " :
              "Build ${params.BUILD_TYPE} success! "
            )+
            "<${currentBuild.absoluteUrl}|${currentBuild.displayName}> "+
            "(${currentBuild.durationString})\n"+
            "Packages: "+
            "<${apkUrl}|Android>, "+
            "<${ipaUrl}|iOS>"
          ),
          color: 'good'
        )
      } }
    }
  }
}
